plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.7"
    id("io.micronaut.test-resources") version "3.6.7"
}

version = "0.1"
group = "io.conduktor.metadata"

repositories {
    mavenCentral()
}
dockerfile {
    baseImage = "ghcr.io/graalvm/graalvm-ce:ol7-java17-22.3.0-b2"
    environmentVariable("TZ", "Europe/Paris")

}
dependencies {
    //compileOnly 'org.projectlombok:lombok:1.18.24'
    //annotationProcessor 'org.projectlombok:lombok:1.18.24'
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation ('org.jobrunr:jobrunr-micronaut-feature:5.3.2')
    implementation("org.apache.kafka:kafka-clients:3.3.1")

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.postgresql:postgresql")
    implementation("io.micronaut:micronaut-validation")

}


application {
    mainClass.set("io.conduktor.metadata.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("io.conduktor.metadata.*")
    }
}



